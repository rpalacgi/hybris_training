<?xml version="1.0" encoding="UTF-8"?>
<!-- [y] hybris Platform Copyright (c) 2000-2013 hybris AG All rights reserved. This software is the confidential and proprietary information 
	of hybris ("Confidential Information"). You shall not disclose such Confidential Information and shall use it only in accordance with 
	the terms of the license agreement you entered into with hybris. -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/integration
           http://www.springframework.org/schema/integration/spring-integration.xsd
           http://www.springframework.org/schema/integration/file
           http://www.springframework.org/schema/integration/file/spring-integration-file.xsd">

	<bean id="baseDirectoryTelco" class="java.lang.String">
		<constructor-arg value="#{baseDirectory}/telco" />
	</bean>

	<!-- 1) Scan for files -->
	<file:inbound-channel-adapter id="batchFilesTelco" directory="#{baseDirectoryTelco}" filename-regex="^(.*)-(\d+)\.csv"
		comparator="fileOrderComparator">
		<int:poller fixed-rate="1000" />
	</file:inbound-channel-adapter>

	<!-- 2) move the file to processing and setup header -->
	<file:outbound-gateway request-channel="batchFilesTelco" reply-channel="batchFilesTelcoProc" directory="#{baseDirectoryTelco}/processing"
		delete-source-files="true" />
	<int:service-activator input-channel="batchFilesTelcoProc" output-channel="batchFilesHeaderInit" ref="telcoHeaderSetupTask"
		method="execute" />
	<bean id="telcoHeaderSetupTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
		<property name="catalog" value="telcoProductCatalog" />
		<property name="net" value="false" />
		<property name="storeBaseDirectory" ref="baseDirectoryTelco" />
	</bean>

	<bean id="batchPointOfServiceConverterMapping" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="point-of-service" p:converter-ref="batchPointOfServiceConverter" />
	<bean id="batchWarehouseConverterMapping" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="warehouse" p:converter-ref="batchWarehouseConverter" />
	<bean id="batchOrganizationConverterMapping" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		p:mapping="organization" p:converter-ref="batchOrganizationConverter" />
	
	<alias name="batchExtendedCustomerConverter" alias="batchCustomerConverter"/>

	<bean id="batchPointOfServiceConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				INSERT_UPDATE PointOfService;name[unique=true];type(code);openingSchedule(code)
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1};{2}</value>
		</property>
		<property name="type" value="PointOfService" />
	</bean>
	<bean id="batchWarehouseConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				INSERT_UPDATE Warehouse;code[unique=true];name;vendor(code);default
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1};{2};{3}</value>
		</property>
		<property name="type" value="Warehouse" />
	</bean>
	<bean id="batchOrganizationConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				INSERT_UPDATE Organization;id[unique=true];name;phoneNumber;email;customers(uid)
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1};{2};{3};{4}</value>
		</property>
		<property name="type" value="Organization" />
	</bean>
	<bean id="batchExtendedCustomerConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{defaultImpexProductHeader}
				# Insert Customer
				$passwordEncoding=md5
				$defaultPassword=1234
				$setName=name[cellDecorator=de.hybris.platform.acceleratorservices.dataimport.batch.decorator.CustomerNameDecorator]
				$setPassword=@password[translator=de.hybris.platform.acceleratorservices.dataimport.batch.converter.RandomPasswordTranslator][default='$passwordEncoding:$defaultPassword']
				$defaultAttemptCount=0
				$defaultStatus=false
				INSERT_UPDATE Customer;uid[unique=true];$setName;title(code);$setPassword;attemptCount[default=$defaultAttemptCount];status[default=$defaultStatus];organizations(id)[collection-delimiter=|]
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1} {2};{3};{4};{5};{6};{7}</value>
		</property>
		<property name="type" value="Customer" />
	</bean>
	
</beans>
